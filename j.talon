os: mac
app: jqt

-

self classify:    "="
equal:            "="
is local:         "=."
is global:        "=:"
box:              "<"
less than:        "<"
floor:            "<."
lesser of:        "<."
decrement:        "<:"
less or equal:    "<:"
open:             ">"
larger than:      ">"
ceiling:          ">."
larger of:        ">."
increment:        ">:"
larger or equal:  ">:"
negitive sign:    "_"
infinity:         "_"
indeterminate:    "_."
infinite:         "_:"

conjugate:        "+"      
plus:             "+"
real imaginary:   "+."
greatest common divisor:  "+."
or:               "+."
double:           "+:"
not or:           "+:"
sign of the number: "*"
times:            "*"
length angle:     "*."
least common multiple:    "*."
and:              "*."
square:           "*:"
not and:          "*:"
negate:           "-"
minus:            "-"
not:              "-."
less:             "-."
halve:            "-:"
match:            "-:"
reciprocal:       "%"
divide:           "%"
matrix inverse:   "%."
matrix divide:    "%."
square root:      "%:"
root:             "%:"

exponential:      "^"
power:            "^"
stope function:   "^!.p"
natural log:      "^."
logarithm:        "^."
power of verb:    "^:"
shape of:         "$"
shape:            "$"
sparse:           "$."
self reference:   "$:"
reflex:           "~"
evoke:            "~"
nub:              "~."
nub sieve:        "~:"
not equal:        "~:"
magnitude:        "|"
residue:          "|"
reverse:          "|."
rotate:           "|."
shift:            "|.!."
transpose:        "|:"
rearrange axes:   "|:"

determinant:      "."
matrix product:   "."
definition:       ":"
assign obverse:   ":."
assign adverse:   "::"
ravel:            ","
append:           ","
ravel items:      ",."
stitch:           ",."
itemize:          ",:"
laminate:         ",:"
raze:             ";"
link:             ";"
cut:              ";."
reversed:         ";.0"
subarray:         ";.0"
#more ;. operations need to be added
words:            ";:"
sequence machine: ";:"

tally:            "#"
copy:             "#"
base two:         "#."
base:             "#."
antibase two:     "#:"
antibase:         "#:"
factorial:        "!"
out of:           "!"
fit:              "!."
foreign function: "!:"
insert:           "/"
table:            "/"
oblique:          "/."
key:              "/."
grade up:         "/:"
sort up:          "/:"
prefix:           "\\"
infix:            "\\"
suffix:           "\\."
outfix:           "\\."
grade down:       "\\:"
sort down:        "\\:"

same left:        "["
left:             "["
cap:              "[:"
same right:       "]"
right:            "]"
catalogue:        "{"
from:             "{"
head:             "{."
take:             "{."
tail:             "{:"
map:              "{::"
fetch:            "{::"
composite item:   "}"
amend:            "}"
behead:           "}."
drop:             "}."
curtail:          "}:"
direct definition:"{{{  }}}"

rank:             "\""
assign:           "\""
constant:         "\""
copy rank:        "\""
do:               "\"."
numbers:          "\"."
default format:   "\":"
format:           "\":"
tie:              "`"
evoke gerund:     "`:"
atop:             "@"
agenda:           "@."
at:               "@:"
bond:             "&"
compose:          "&"
under dual:       "&."
appose:           "&:"
under:            "&.:"
roll:             "?"
deal:             "?"
roll fixed:       "?."
deal fixed:       "?."

alphabet:         "a."
ace:              "a:"
anagram index:    "A."
anagram:          "A."
boolean:          "b."
bitwise:          "b."
bitwise shift:    "b."
verb information: "b."
verb information obverse:  "b. _1"
verb information ranks:    "b. 0"
verb information identity function: "b. 1"
cycle direct:     "C."
permute:          "C."
permutation:      "C.!.2"
parity:           "C.!.2"
raze in:          "e."
member:           "e."
find matches:     "E."
fix:              "f."
fold single:          "F."
fold single forward:  "F.."
fold single reverse:  "F.:"
fold multiple:        "F:"
fold multiple forward:"F:."
fold multiple reverse:"F::"
hypergeometric:       "H."
integers:             "i."
index of:             "i."
steps:                "i:"
index of last:        "i:"
indices:              "I."
interval index:       "I."
imaginary:            "j."
complex:              "j."
level of:             "L."
level at:             "L:"
memo:                 "M."
comment:              "NB."
pi times:             "o."
circle function:      "o."
# need to add the circle funtions
roots:                "p."
polynomial:           "p."
polynomial derivative:"p.."
polynomial integral:  "p.."
primes:               "p:"
prime factors:        "q:"
prime exponents:      "q:"
angle:                "r."
polar:                "r."
symbol:               "s:"
spread:               "S:"
unicode:              "u:"
extended precision:   "x:"
terminate fold:       "Z:"
enhanced operand left:"u."
enhanced operand right:"v."

assert:               "assert."
break:                "break."
continue:             "continue."
else:                 "else."
else if:              "elseif."
for:                  "for."
for loop:             "for_ijk."
go to:                "goto_lbl."
go to label:          "label_lbl."
if:                   "if."
return:               "return."
select:               "select."
case:                 "case."
if case:              "fcase."
throw:                "throw."
try:                  "try."
catch:                "catch."
caught:               "catchd."
catched:              "catcht."
while:                "while."
whilst:               "whilst."